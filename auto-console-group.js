/*!
 *  @module      auto-console-group v1.2.5
 *
 *  @description Automagically group console logs in the browser console.
 *
 *  @author      David J. Bradshaw <info@iframe-resizer.com>
 *  @see         {@link https://github.com/davidjbradshaw/auto-console-group#readme}
 *  @license     MIT
 *
 *  @copyright  (c) 2025, David J. Bradshaw. All rights reserved.
 */

(function(n,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(n=typeof globalThis<"u"?globalThis:n||self,i(n.createAutoConsoleGroup={}))})(this,function(n){"use strict";const i="font-weight: normal;",T="font-weight: bold;",w="font-style: italic;",$=i+w,I="color: #135CD2;",M="color: #A9C7FB;",v="color: #1F1F1F;",D="color: #E3E3E3;",l="default",R="error",L="log",y=Object.freeze({assert:!0,error:!0,warn:!0}),C={expand:!0,defaultEvent:void 0,event:void 0,label:"AutoConsoleGroup",showTime:!0},H={profile:0,profileEnd:0,timeStamp:0,trace:0},S=t=>{const o=t.event||t.defaultEvent;return o?`${o}`:""};function B(){const t=new Date,o=(d,a)=>t[d]().toString().padStart(a,"0"),s=o("getHours",2),u=o("getMinutes",2),c=o("getSeconds",2),f=o("getMilliseconds",3);return`@ ${s}:${u}:${c}.${f}`}const{fromEntries:F,keys:N}=Object,U=t=>[t,console[t]],b=t=>o=>[o,function(s){t[o]=s}],g=(t,o)=>F(N(t).map(o));function _(t={}){const o={},s={},u=[],c={...C,expand:!t.collapsed||C.expanded,...t};let f;function d(){u.length=0,f=""}function a(){delete c.event,d()}const P=()=>u.some(([e])=>e in y),Q=()=>P()?!0:!!c.expand,q=()=>c.showTime?f:"";function G(){if(u.length===0){a();return}console[Q()?"group":"groupCollapsed"](`%c${c.label}%c ${S(c)} %c${q()}`,i,T,$);for(const[e,...r]of u)console[e](...r);console.groupEnd(),a()}function E(){f===""&&(f=B())}function x(){E(),queueMicrotask(()=>queueMicrotask(G))}function p(e,...r){u.length===0&&x(),u.push([e,...r])}const V=e=>(...r)=>{let m;try{m=e(...r)}catch(h){if(Error.prototype.isPrototypeOf(h))p(R,h);else throw h}return m};function W(e=l){s[e]?s[e]+=1:s[e]=1,p(L,`${e}: ${s[e]}`)}function z(e=l){delete s[e]}function K(e=l){E(),o[e]=performance.now()}function A(e=l,...r){const m=performance.now()-o[e];p(L,`${e}: ${m} ms`,...r)}function X(e=l){A(e),delete o[e]}const J=e=>[e,(...r)=>p(e,...r)];return{...g(c,b(c)),...g(console,J),...g(H,U),count:W,countReset:z,endAutoGroup:G,errorBoundary:V,purge:d,time:K,timeEnd:X,timeLog:A,touch:E}}const O=typeof window>"u"||typeof window.matchMedia!="function"?!1:window.matchMedia("(prefers-color-scheme: dark)").matches,j=O?M:I,k=O?D:v;n.BOLD=T,n.FOREGROUND=k,n.HIGHLIGHT=j,n.ITALIC=w,n.NORMAL=i,n.default=_,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
