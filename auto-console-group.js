/*!
 *  @module      auto-console-group v1.2.13
 *
 *  @description Automagically group console logs in the browser console.
 *
 *  @author      David J. Bradshaw <info@iframe-resizer.com>
 *  @see         {@link https://github.com/davidjbradshaw/auto-console-group#readme}
 *  @license     MIT
 *
 *  @copyright  (c) 2025, David J. Bradshaw. All rights reserved.
 */

(function(s,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(s=typeof globalThis<"u"?globalThis:s||self,i(s.createAutoConsoleGroup={}))})(this,function(s){"use strict";const i="font-weight: normal;",T="font-weight: bold;",C="font-style: italic;",$=i+C,I="color: #135CD2;",M="color: #A9C7FB;",D="color: #1F1F1F;",R="color: #E3E3E3;",l="default",y="error",O="log",H=Object.freeze({assert:!0,error:!0,warn:!0}),G={expand:!1,defaultEvent:void 0,event:void 0,label:"AutoConsoleGroup",showTime:!0},B={profile:0,profileEnd:0,timeStamp:0,trace:0},F=o=>{const t=o.event||o.defaultEvent;return t?`${t}`:""},f=Object.assign(console);function N(){const o=new Date,t=(p,m)=>o[p]().toString().padStart(m,"0"),c=t("getHours",2),u=t("getMinutes",2),r=t("getSeconds",2),a=t("getMilliseconds",3);return`@ ${c}:${u}:${r}.${a}`}const{fromEntries:S,keys:U}=Object,j=o=>[o,f[o]],_=o=>t=>[t,function(c){o[t]=c}],h=(o,t)=>S(U(o).map(t));function b(o={}){const t={},c={},u=[],r={...G,expand:!o.collapsed||G.expanded,...o};let a="";function p(){u.length=0,a=""}function m(){delete r.event,p()}const Q=()=>u.some(([e])=>e in H),q=()=>Q()?!0:!!r.expand,x=()=>r.showTime?a:"";function w(){if(u.length===0){m();return}f[q()?"group":"groupCollapsed"](`%c${r.label}%c ${F(r)} %c${x()}`,i,T,$);for(const[e,...n]of u)f.assert(e in f,`Unknown console method: ${e}`),e in f&&f[e](...n);f.groupEnd(),m()}function g(){a===""&&(a=N(),queueMicrotask(()=>queueMicrotask(w)))}function V(e){g(),r.event=e}function d(e,...n){u.length===0&&g(),u.push([e,...n])}const W=e=>(...n)=>{let E;try{E=e(...n)}catch(L){if(!Error.prototype.isPrototypeOf(L))throw L;d(y,L),w()}return E};function z(e,...n){e!==!0&&d("assert",e,...n)}function K(e=l){c[e]?c[e]+=1:c[e]=1,d(O,`${e}: ${c[e]}`)}function X(e=l){delete c[e]}function J(e=l){g(),t[e]=performance.now()}function A(e=l,...n){if(!t[e]){d("timeLog",e,...n);return}const E=performance.now()-t[e];d(O,`${e}: ${E} ms`,...n)}function Y(e=l){A(e),delete t[e]}const Z=e=>[e,(...n)=>d(e,...n)];return{...h(r,_(r)),...h(console,Z),...h(B,j),assert:z,count:K,countReset:X,endAutoGroup:w,errorBoundary:W,event:V,purge:p,time:J,timeEnd:Y,timeLog:A,touch:g}}const v=typeof window>"u"||typeof window.matchMedia!="function"?!1:window.matchMedia("(prefers-color-scheme: dark)").matches,k=v?M:I,P=v?R:D;s.BOLD=T,s.FOREGROUND=P,s.HIGHLIGHT=k,s.ITALIC=C,s.NORMAL=i,s.default=b,Object.defineProperties(s,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
