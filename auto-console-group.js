/*!
 *  @module      auto-console-group v1.2.8
 *
 *  @description Automagically group console logs in the browser console.
 *
 *  @author      David J. Bradshaw <info@iframe-resizer.com>
 *  @see         {@link https://github.com/davidjbradshaw/auto-console-group#readme}
 *  @license     MIT
 *
 *  @copyright  (c) 2025, David J. Bradshaw. All rights reserved.
 */

(function(n,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(n=typeof globalThis<"u"?globalThis:n||self,i(n.createAutoConsoleGroup={}))})(this,function(n){"use strict";const i="font-weight: normal;",T="font-weight: bold;",w="font-style: italic;",A=i+w,$="color: #135CD2;",I="color: #A9C7FB;",M="color: #1F1F1F;",D="color: #E3E3E3;",l="default",R="error",L="log",y=Object.freeze({assert:!0,error:!0,warn:!0}),C={expand:!0,defaultEvent:void 0,event:void 0,label:"AutoConsoleGroup",showTime:!0},H={profile:0,profileEnd:0,timeStamp:0,trace:0},S=t=>{const o=t.event||t.defaultEvent;return o?`${o}`:""};function B(){const t=new Date,o=(d,a)=>t[d]().toString().padStart(a,"0"),c=o("getHours",2),u=o("getMinutes",2),s=o("getSeconds",2),f=o("getMilliseconds",3);return`@ ${c}:${u}:${s}.${f}`}const{fromEntries:F,keys:N}=Object,U=t=>[t,console[t]],b=t=>o=>[o,function(c){t[o]=c}],E=(t,o)=>F(N(t).map(o));function _(t={}){const o={},c={},u=[],s={...C,expand:!t.collapsed||C.expanded,...t};let f="";function d(){u.length=0,f=""}function a(){delete s.event,d()}const P=()=>u.some(([e])=>e in y),Q=()=>P()?!0:!!s.expand,q=()=>s.showTime?f:"";function G(){if(u.length===0){a();return}console[Q()?"group":"groupCollapsed"](`%c${s.label}%c ${S(s)} %c${q()}`,i,T,A);for(const[e,...r]of u)console[e](...r);console.groupEnd(),a()}function p(){f===""&&(f=B())}function x(e){p(),s.event=e}function V(){p(),queueMicrotask(()=>queueMicrotask(G))}function m(e,...r){u.length===0&&V(),u.push([e,...r])}const W=e=>(...r)=>{let g;try{g=e(...r)}catch(h){if(Error.prototype.isPrototypeOf(h))m(R,h);else throw h}return g};function z(e=l){c[e]?c[e]+=1:c[e]=1,m(L,`${e}: ${c[e]}`)}function K(e=l){delete c[e]}function X(e=l){p(),o[e]=performance.now()}function v(e=l,...r){const g=performance.now()-o[e];m(L,`${e}: ${g} ms`,...r)}function J(e=l){v(e),delete o[e]}const Y=e=>[e,(...r)=>m(e,...r)];return{...E(s,b(s)),...E(console,Y),...E(H,U),count:z,countReset:K,endAutoGroup:G,errorBoundary:W,event:x,purge:d,time:X,timeEnd:J,timeLog:v,touch:p}}const O=typeof window>"u"||typeof window.matchMedia!="function"?!1:window.matchMedia("(prefers-color-scheme: dark)").matches,j=O?I:$,k=O?D:M;n.BOLD=T,n.FOREGROUND=k,n.HIGHLIGHT=j,n.ITALIC=w,n.NORMAL=i,n.default=_,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
