/*!
 *  @module      auto-console-group v1.2.7
 *
 *  @description Automagically group console logs in the browser console.
 *
 *  @author      David J. Bradshaw <info@iframe-resizer.com>
 *  @see         {@link https://github.com/davidjbradshaw/auto-console-group#readme}
 *  @license     MIT
 *
 *  @copyright  (c) 2025, David J. Bradshaw. All rights reserved.
 */

(function(n,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(n=typeof globalThis<"u"?globalThis:n||self,i(n.createConsoleGroup={}))})(this,function(n){"use strict";const i="font-weight: normal;",w="font-weight: bold;",C="font-style: italic;",$=i+C,I="color: #135CD2;",M="color: #A9C7FB;",D="color: #1F1F1F;",R="color: #E3E3E3;",l="default",y="error",L="log",H=Object.freeze({assert:!0,error:!0,warn:!0}),O={expand:!0,defaultEvent:void 0,event:void 0,label:"AutoConsoleGroup",showTime:!0},S={profile:0,profileEnd:0,timeStamp:0,trace:0},B=t=>{const o=t.event||t.defaultEvent;return o?`${o}`:""};function F(){const t=new Date,o=(d,a)=>t[d]().toString().padStart(a,"0"),c=o("getHours",2),u=o("getMinutes",2),s=o("getSeconds",2),f=o("getMilliseconds",3);return`@ ${c}:${u}:${s}.${f}`}const{fromEntries:N,keys:U}=Object,b=t=>[t,console[t]],_=t=>o=>[o,function(c){t[o]=c}],E=(t,o)=>N(U(t).map(o)),h=console;function j(t={}){const o={},c={},u=[],s={...O,expand:!t.collapsed||O.expanded,...t};let f="";function d(){u.length=0,f=""}function a(){delete s.event,d()}const Q=()=>u.some(([e])=>e in H),q=()=>Q()?!0:!!s.expand,x=()=>s.showTime?f:"";function v(){if(u.length===0){a();return}h[q()?"group":"groupCollapsed"](`%c${s.label}%c ${B(s)} %c${x()}`,i,w,$);for(const[e,...r]of u)h[e](...r);h.groupEnd(),a()}function p(){f===""&&(f=F())}function V(e){p(),s.event=e}function W(){p(),queueMicrotask(()=>queueMicrotask(v))}function m(e,...r){u.length===0&&W(),u.push([e,...r])}const z=e=>(...r)=>{let g;try{g=e(...r)}catch(T){if(Error.prototype.isPrototypeOf(T))m(y,T);else throw T}return g};function K(e=l){c[e]?c[e]+=1:c[e]=1,m(L,`${e}: ${c[e]}`)}function X(e=l){delete c[e]}function J(e=l){p(),o[e]=performance.now()}function A(e=l,...r){const g=performance.now()-o[e];m(L,`${e}: ${g} ms`,...r)}function Y(e=l){A(e),delete o[e]}const Z=e=>[e,(...r)=>m(e,...r)];return{...E(s,_(s)),...E(console,Z),...E(S,b),count:K,countReset:X,endAutoGroup:v,errorBoundary:z,event:V,purge:d,time:J,timeEnd:Y,timeLog:A,touch:p}}const G=typeof window>"u"||typeof window.matchMedia!="function"?!1:window.matchMedia("(prefers-color-scheme: dark)").matches,k=G?M:I,P=G?R:D;n.BOLD=w,n.FOREGROUND=P,n.HIGHLIGHT=k,n.ITALIC=C,n.NORMAL=i,n.default=j,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
